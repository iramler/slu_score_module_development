---
title: "nba_handout_key"
author: "eric seltzer"
format: html
---

# Introduction
You are an NBA GM for the Boston Celtics, one of the most historic teams of all time. You have acquired access to a data set that includes statistics and salary information for players ranging from 1990-2023. You're goal is to successfully visualize this data set, and determine a way to evaluate which type of players you want to trade for your team. Ideally, you want players that play above what they are being paid and therefore are undervalued. 

# Question 1
Create visualizations to look at the distribution of minutes played and salary. Filter the data so it is only the most recent season.
```{r}
library(tidyverse)
```

```{r}
nba <- read_csv(here::here("esselt21/nba_salary_module/module/initial_nba.csv"))
```

```{r}
nba <-
  nba |>
  filter(Season == 2021)
```

```{r}
ggplot(data = nba,
       aes(x = MP)) +
  geom_histogram(color = "black",
                 fill = "ivory")
```

```{r}
ggplot(data = nba,
       aes(x = salary)) +
  geom_histogram(color = "black",
                 fill = "ivory")
```

# Question 2
How should we decide what type of minutes we should limit
```{r}
nba <-
  nba |>
  filter(MP >= 1650)
```

```{r}
ggplot(data = nba,
       aes(x = MP)) +
  geom_histogram(color = "black",
                 fill = "ivory")
```

# Question 3
```{r}
nba <-
  nba |>
  mutate(salary = salary / 1000)
```

```{r}
ggplot(data = nba,
       aes(x = salary)) +
  geom_histogram(color = "black",
                 fill = "ivory")
```

```{r}
nba <-
  nba |>
  mutate(inflationAdjSalary = inflationAdjSalary / 1000)
```

```{r}
nba <-
  nba |>
  mutate(loginflationsalary = log(inflationAdjSalary))
```

```{r}
nba <-
  nba |>
  mutate(sqrtinflationsalary = sqrt(inflationAdjSalary))
```

# Question 4
Which transformation standardizes the salary values better?
```{r}
ggplot(data = nba,
       aes(x = sqrtinflationsalary)) +
  geom_histogram(color = "black",
                 fill = "ivory")

ggplot(data = nba,
       aes(x = loginflationsalary)) +
  geom_histogram(color = "black",
                 fill = "ivory")
```

# create PER variable
```{r}
nba <-
  nba |>
  mutate(
    PER = (
      (FG * 85.910) +
        (STL * 53.897) +
        (`3P` * 51.757) +
        (FT * 46.845) +
        (BLK * 39.190) +
        (ORB * 39.190) +
        (AST * 34.677) +
        (DRB * 14.707) -
        (PF * 17.174) -
        ((FTA - FT) * 20.091) -
        ((FGA - FG) * 39.190) -
        (TOV * 53.897)
    ) * (1 / MP)
  )
```

```{r}
ggplot(data = nba,
       aes(x = PER)) +
  geom_histogram(color = "black",
                 fill = "ivory")
```

# plot PER vs. log salary
```{r}
ggplot(data = nba,
       aes(x = PER,
           y = loginflationsalary * 2)) +
  geom_point()
```

