---
title: "Triple Crown Worksheet"
author: "Brendan Karadenes"
format: html
---

                          Logistic Regression in Horseracing
The Triple Crown is an annual series of three horseraces, including the Belmont Stakes, Kentucky Derby, and Preakness Stakes. Each race began in different years, but all were inaugurated by 1875. The winners of all three races are given the prestigious Triple Crown Trophy, which only 17 racers have. The Triple Crown is a popular spectator sport with tens of thousands of fans in attendance at each race and millions more watching around the world.
We will be investigating results from all three races from 2005 to 2019 â€“ which contains 627 horses that competed during this period. The `final_place` variable is what place the horse finished in that race. The `odds` variable is the pre-race betting odds that a horse has of winning (lower odds mean higher chance of winning). The `track_condition` variable has three categories describing the track surface: fast, sloppy, and muddy. 

Our goal is to set up a model to predict the probability of a top 3 placement of the horses based on the betting odds and track conditions in a logistic regression model. 

To begin, let's use what we know about simple linear regression and predict the probability of whether a horse placed in the top 3 based on betting odds.

```{r}
# first load in any necessary packages and data
library(tidyverse)
horseracing <- read.csv("triple-crown.csv")
```

1. Talk to a neighbor and brainstorm some ideas on the appropriateness of the model below.

```{r}
# creating a top 3 variable

horseracing <- horseracing %>%
  mutate(top_3 = ifelse(final_place <= 3, 1, 0))

# graphing the model

ggplot(data = horseracing , aes(x = Odds, y = top_3) ) + 
  geom_point() + 
  geom_smooth(method = "lm", se = F)+
  geom_smooth(se = F, color = "red")+
  theme_minimal()
```



2.Use R to fit a model using betting odds to predict a top 3 finish. Write out the model below.

```{r}
# fill in the blanks
mod1 = glm()
summary()
```



3. Use the fitted model to "predict" for a betting odds equal to 10 and 30. What do these predicted values represent in the context of the question?

```{r}
newx = data.frame(Odds = c( , )) # fill in blanks
predict.glm(mod1,newx,type="response")
```



4. Now plot your model that uses betting odds to predict the probability of placing top 3 in a race.

```{r}
ggplot( , aes( , ) ) +  # fill in blanks
  geom_jitter(width = 0, height = 0.015) +
  geom_smooth(method="glm", 
              method.args=list(family="binomial"), 
              se=FALSE) +
  theme_minimal()
```

5. Give one reason why you think poor track conditions (muddy and sloppy) would or would not level the playing field for horses with higher betting odds. Explain.



6. Now use R to fit a model that uses both betting odds and track conditions to predict the probability of placing top 3 in a race. Write out the model below.

```{r}
# your code here

```



7. Compare the two models using BIC and determine which one is a better fit for predicting a top three finish.

```{r}
# install.packages("flexmix")
library(flexmix)
# use the `BIC()` function
```

8. Examine the two models below representing the favorites (odds 10 or less) in the Triple Crown races and the underdogs (odds 20 or more). Examine the coefficients on the muddy and sloppy predictor variables and compare them to each other. Does this suggest that poor conditions might "level the playing field" between low and high odds horses? What further testing could we do to solve this? Explain.

```{r}
favorites <- horseracing %>%
  filter(Odds<=10)
```

```{r}
underdogs <- horseracing %>%
  filter(Odds>=20)
```

```{r}
moda = glm(top_3 ~ Odds + track_condition, data = favorites)
summary(moda)
```

```{r}
modb = glm(top_3 ~ Odds + track_condition, data = underdogs)
summary(modb)
```


