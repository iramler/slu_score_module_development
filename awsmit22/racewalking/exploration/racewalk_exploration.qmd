---
title: "race_walk_exploration"
format: html
---
# Libraries and Data

```{r}
library(tidyverse)
library(readr)
```

```{r}
worldchamps <- read_csv("~/Desktop/git/stat_289_score/awsmit22/module_exploration/race_walking/worldchamps.csv")
```

# Data Prep

```{r}
ten <- worldchamps |> filter(DISTANCE == 10000) |> separate(TIME, into = c("TIME", "RECORD"), sep = " ") |> separate(TIME, into = c("MIN", "SEC"), sep = ":") |> mutate(MIN = as.double(MIN), SEC = as.double(SEC)) |> mutate(SEC = SEC/60) |> mutate(TIME = SEC + MIN) |> mutate(RECORD = replace_na(RECORD, replace = "NONE")) 
```

```{r}
twenty <- worldchamps |> filter(DISTANCE == 20000) |> separate(TIME, into = c("TIME", "RECORD"), sep = " ") |> separate(TIME, into = c("HRS", "MIN", "SEC"), sep = ":") |> mutate(HRS = as.double(HRS), MIN = as.double(MIN), SEC = as.double(SEC)) |> mutate(HRS = HRS*60, SEC = SEC/60) |> mutate(TIME = HRS + SEC + MIN) |> mutate(RECORD = replace_na(RECORD, replace = "NONE")) 
```

```{r}
complete <- full_join(ten, twenty)
```

```{r}
racewalking <- complete |> select(POS, COUNTRY, ATHLETE, RECORD, DISTANCE, GENDER, TIME)
```

```{r}
racewalking_df <- racewalking |> mutate(SPEED= DISTANCE/TIME) 
```

```{r}
racewalking_df <- racewalking_df |> mutate(GENDER = if_else(GENDER == 1, true = "Woman", false = "Man"))
```

```{r}
racewalking_df <- racewalking_df |> mutate(DISTANCE = as.factor(DISTANCE))
```

Times in minutes
Distance is in meters
Gender 0 is Men
Gender 1 is women
Speed is in m/min for now but could be adjusted to m/sec if i decide thats better

# Exploration

* could do the speed and see if theres a difference for the distances *

```{r}
racewalking_df |> filter(POS == 1)
```

```{r}
ggplot(racewalking_df, aes(y = SPEED, x = DISTANCE)) + geom_boxplot()
```

```{r}
ggplot(racewalking_df, aes(y = TIME, x = GENDER)) + geom_boxplot() + facet_wrap(~DISTANCE)
```

```{r}
ggplot(racewalking_df, aes(y = TIME, x = DISTANCE)) + geom_boxplot() + facet_wrap(~GENDER)
```

```{r}
ggplot(racewalking_df, aes(x = SPEED)) + geom_histogram(bins = 15, colour = "black", fill = "lightblue") + facet_wrap(~DISTANCE)
```

```{r}
barplot <- racewalking_df |> group_by(RECORD) |> summarise(count = n())

ggplot(barplot, aes(x = RECORD, y = count)) + geom_col() + geom_text(aes(label = count), nudge_y = 3)
```

```{r}
prop <- racewalking_df |> group_by(RECORD) |> summarise(prop = n()/237) 

prop_round <- round(prop$prop, digits = 3)

ggplot(prop, aes(x = RECORD, y = prop)) + geom_col() + geom_text(aes(label = prop_round), nudge_y = 0.01)
```

```{r}
ggplot(racewalking_df, aes(x = COUNTRY, y = POS)) + geom_col()
```

```{r}
n_records <- racewalking_df |> mutate(n_record = if_else(RECORD == "NONE", true = 0, false = 1))

records <- n_records |>group_by(COUNTRY) |> summarise(n_record = sum(n_record)) |> filter(n_record >=2) |>mutate(COUNTRY = fct_reorder(COUNTRY, n_record))

ggplot(data = records, aes(x = COUNTRY, y = n_record)) + geom_col() + coord_flip() 
```

```{r}
prop_records <- n_records |>group_by(COUNTRY) |> summarise(n= n(), n_record = sum(n_record), prop = n_record/n) |> filter(n_record >=2) |>mutate(COUNTRY = fct_reorder(COUNTRY, n_record)) |> filter(prop < 1) |> mutate(COUNTRY = fct_reorder(COUNTRY, prop))

ggplot(data = prop_records, aes(x = COUNTRY, y = prop)) + geom_col() + coord_flip() 
```

```{r}
pb <-n_records |> filter(RECORD == "PB") |> group_by(COUNTRY) |> summarise(n = sum(n_record))

ggplot(pb, aes(x = n)) + geom_freqpoly()
```

```{r}
prop_records_dist <- n_records |>group_by(DISTANCE) |> summarise(n= n(), n_record = sum(n_record), prop = n_record/n) 

ggplot(data = prop_records_dist, aes(x = DISTANCE, y = prop)) + geom_col()
```

```{r}
prop_records_dist <- n_records |>group_by(COUNTRY, DISTANCE) |> summarise(n= n(), n_record = sum(n_record), prop = n_record/n) |> filter(prop <1 & prop > 0)

ggplot(data = prop_records_dist, aes(x = DISTANCE, y = prop)) + geom_boxplot()
```

```{r}
ggplot(racewalking_df, aes(x = SPEED, colour = DISTANCE)) + geom_freqpoly() 
```

# Difference in means (speeds)

speed predicted by distance

```{r}
race_walk <-racewalking |> mutate(DISTANCE = as.factor(DISTANCE)) |> mutate(SPEED = if_else(DISTANCE == 10000, true = 10000/TIME, false = 20000/TIME))

mod <- lm(SPEED~DISTANCE, data = race_walk)
summary(mod)
```

```{r}
speedwalk <- racewalking |> mutate(DISTANCE = if_else(DISTANCE == 10000, true = 1, false = 0)) |> mutate(DISTANCE = as.logical(DISTANCE)) |> mutate(SPEED = if_else(DISTANCE == TRUE, true = 10000/TIME, false = 20000/TIME))
```

```{r}
short <- subset(speedwalk,DISTANCE==TRUE)
long <- subset(speedwalk,DISTANCE==FALSE)
```

```{r}
modshort <- lm(SPEED~POS,data=short)
modlong <- lm(SPEED~POS,data=long)
```

```{r}
plot(SPEED~POS, data = speedwalk)
abline(modshort)
abline(modlong)
```

```{r}
ggplot(data = racewalking_df, aes(x = POS, y = SPEED, colour = DISTANCE)) + geom_point() + facet_wrap(~GENDER)
```

```{r}
sum <- racewalking_df |> mutate(n_rec = if_else(RECORD != "NONE", true = 1, false = 0)) |> filter(n_rec == 1) |> group_by(COUNTRY) |> summarise(tot_rec = sum(n_rec), avg_speed = mean(SPEED))
```

```{r}
ggplot(data = sum, aes(x = avg_speed, y = tot_rec, colour = COUNTRY)) + geom_point()
```


# Logistic regression for whether or not the athlete gets a record

could do it predicted by speed as well as distance

that would mean a binary response predicted by a binary predictor and a quantitative predictor

# Difference in props (records)


# Linear regression with POS predicted by COUNTRY, ATHLETE AND RECORD and maybe speed


# Linear regression with RECORD predicted by SPEED, POS, COUNTRY, GENDER, DISTANCE


*could see about country predicting something







