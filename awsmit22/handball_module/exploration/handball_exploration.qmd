---
title: "handball_exploration"
format: html
---

# Libraries

```{r}
library(tidyverse)
library(readr)
library(modelr)
library(broom)
library(stringr)
```

# Data

[Kaggle](https://www.kaggle.com/datasets/nemanjagojkovic/handball-bundesliga-stats-202223)

```{r}
handball_df <- read_csv("~/Desktop/git/stat_289_score/awsmit22/handball_module/data_repo_submission/handball_stats.csv")
```

```{r}
ggplot(data = handball_df, aes(x = POSITION, y = RC)) + geom_col()
```

```{r}
ggplot(data = handball_df, aes(x = POSITION, y = HPI)) + geom_boxplot()
```

*thinking to do a question with different visualizations to choose from and ask which is best to measure what*

*Actually I think I could do something with confidence and prediction intervals*

```{r}
handball_df |> group_by(CLUB) |> summarise()
```

```{r}
summary(handball_df$HPI)
```

stepwise regression

```{r}
full <- lm(HPI ~ P + G + M + FG + G.1 + `%` + AS + TF + ST + BL + YC + `2MIN` + RC + BK + HPI,
          data = handball_df)

mse <- (summary(full)$sigma)^2

none <- lm(HPI~1,data=handball_df)

step(none,scope=list(upper=full),scale=mse)
```

just curious to see the teams ranked in descending order

```{r}
handball_df |> arrange(desc(HPI)) |> group_by(CLUB) |> summarise()
```

```{r}
handball_rc <- handball_df |> mutate(total_rc = RC + BK) |> select(!(BK))
```

```{r}
handball_pen <- handball_rc |> mutate(total_penalties = total_rc + TF + YC + `2MIN`) |> select(c(total_penalties, CLUB, POSITION, P, G, M, FG, G.1, `%`, AS, ST, BL, HPI))
```

```{r}
handball_percent <- handball_pen |> mutate(percentage = as.double(str_remove(`%`, "%"))) |> relocate(percentage)
```

```{r}
handball_clean <- handball_percent |> mutate(total_offense = G + M + FG + G.1 + AS + ST) |> select(c(CLUB, POSITION, total_offense, total_penalties, P, BL, percentage, HPI))
```

```{r}
handball_pg <- handball_clean |> mutate(offense_pg = total_offense/P, pen_pg = total_penalties/P) 
```

```{r}
ggplot(data = handball_pg, aes(x = offense_pg, y = pen_pg, colour = POSITION)) + geom_point(alpha = 0.5) + theme_minimal()
```

```{r}
ggplot(data = handball_clean, aes(x = total_offense, y = total_penalties)) + geom_point(alpha = 0.5) + theme_minimal() + geom_smooth(method = "lm")
```

```{r}
ggplot(data = handball_pg, aes(x = POSITION, y = pen_pg)) + geom_col()
```

```{r}
modplot <- handball_pg |> group_by(CLUB) |> summarise(club_offense = mean(offense_pg), club_pen = mean(pen_pg), club_hpi = mean(HPI))

ggplot(data = modplot, aes(x = club_offense, y = club_hpi)) +
  geom_point() +
  geom_smooth(method = "lm")

ggplot(data = modplot, aes(x = club_pen, y = club_hpi)) +
  geom_point() +
  geom_smooth(method = "lm")
```

***Prediction interval for an individual y ***

```{r}
# Fit a linear model
model <- lm(club_hpi ~ club_pen, data = modplot)

# Create a prediction interval
prediction_intervals <- predict(
  model, 
  newdata = modplot, 
  interval = "prediction", 
  level = 0.90
  )

# Print the prediction interval
head(prediction_intervals)
```

***Confidence interval for a mean y ***

```{r}
# Fit a linear model
model <- lm(club_hpi ~ club_pen, data = modplot)

# Create a prediction interval
confidence_intervals <- predict(
  model, 
  newdata = modplot, 
  interval = "confidence", 
  level = 0.90
  )

# Print the prediction interval
head(confidence_intervals)
```

***anova for overall fit***

H~o~: 𝛽~total_offense~ = 𝛽~total_penalties~ = 0

H~a~: 𝛽~total_offense~ OR 𝛽~total_penalties~ ≠ 0

```{r}
anovamod <- lm(HPI~total_offense+total_penalties, data=handball_clean)
summary(anovamod)
anova(anovamod)
```

 correlation 
 
```{r}
cor(handball_clean$total_offense, handball_clean$total_penalties)
```

t test for correlation

```{r}
cor.test(handball_clean$total_offense, handball_clean$total_penalties)
```

correlation matrix

```{r}
handball_numeric <- handball_clean |> select(!c(CLUB, POSITION))
cor(handball_numeric)
```

```{r}
barplot <- handball_clean |> group_by(CLUB) |> summarise(club_hpi = mean(HPI)) |> mutate(CLUB = fct_reorder(CLUB, club_hpi))

ggplot(data = barplot, aes(x = CLUB, y = club_hpi)) + geom_col() + coord_flip()
```

```{r}
boxplot <- handball_clean |> group_by(CLUB) |> summarise(club_hpi = mean(HPI)) |> arrange(desc(club_hpi)) |> slice(1:5)

ggplot(data = boxplot, aes(x = CLUB, y = club_hpi)) + geom_boxplot() 
```

```{r}
handball_sum <- handball_clean |> group_by(CLUB) |> summarise(club_hpi = mean(HPI)) 
```

```{r}
ggplot(data = handball_clean, aes(x = HPI)) + geom_density(fill = "lightgreen", colour = "forestgreen", alpha = 0.5) + theme_minimal()
```

```{r}
ggplot(data = handball_clean, aes(x= CLUB, y = HPI)) + geom_boxplot()
```

```{r}
rc_sum <- handball_clean |> group_by(CLUB) |> summarise(sum_rc = sum(total_penalties), sum_g = sum(total_offense))

ggplot(data = rc_sum, aes(x = sum_rc, y = sum_g)) + geom_point()
```

