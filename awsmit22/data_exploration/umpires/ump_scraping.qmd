---
title: "ump_scraping"
format: html
---
# Libraries

```{r}
library(tidyverse)
library(rvest)
library(stringr)
```

# Attempt 1

```{r}
## provide the URL and name it something (in this case, url).
url <- "https://swishanalytics.com/mlb/mlb-umpire-factors"


## read_html() convert the html code from the URL into something R can read
tab <- read_html(url) |> 
  html_nodes("table") ## html_nodes can grab only the tables 
```

```{r}
test <- tab[[2]] |> html_table()
test
```

# Cleaning attempt

```{r}
names(test) <- test[1, ]
test
```

```{r}
cleaner <- test |> filter(Umpire != "Umpire") |> select(!Today)
```

```{r}
neat <- cleaner |> rename(k_pct = `K %`, bb_pct = `BB %`) 
```

```{r}
neater <- neat |> separate(c(k_pct), into = c("Pct", "%"), sep = -1) |> 
  rename(k_pct = Pct) |> select(!`%`) |> 
  separate(c(bb_pct), into = c("Pct", "%"), sep = -1) |> 
  rename(bb_pct = Pct) |> select(!`%`) |> 
  separate(c(`K Boost`), into = c("K", "Boost"), sep = -1) |> 
  select(!Boost) |> separate(c(`BB Boost`), into = c("BB", "Boost"), sep = -1) |> 
  select(!Boost) |> separate(c(`R Boost`), into = c("R", "Boost"), sep = -1) |> 
  select(!Boost) |> separate(c(`BA Boost`), into = c("BA", "Boost"), sep = -1) |> 
  select(!Boost) |> separate(c(`OBP Boost`), into = c("OBP", "Boost"), sep = -1) |>
  select(!Boost) |> separate(c(`SLG Boost`), into = c("SLG", "Boost"), sep = -1) |>
  select(!Boost)
```

```{r}
numbers <- neater |> mutate(Games = as.double(Games)) |>
  mutate(k_pct = as.double(k_pct)) |>
  mutate(bb_pct = as.double(bb_pct)) |>
  mutate(RPG = as.double(RPG)) |>
  mutate(K = as.double(K)) |>
  mutate(BB = as.double(BB)) |>
  mutate(R = as.double(R)) |>
  mutate(BA = as.double(BA)) |>
  mutate(OBP = as.double(OBP)) |>
  mutate(SLG = as.double(SLG))
```

```{r}
numbers <- numbers |> mutate(k_pct = k_pct/100, bb_pct = bb_pct/100)
```

```{r}
longer <- numbers |> pivot_longer(c(5:11), names_to = "boost_stat", values_to = "boost_pct")
```

```{r}
longer |> group_by(Umpire) |> summarise(Games = mean(Games), k_pct = mean(k_pct), bb_pct = mean(bb_pct))
```










