---
title: "wnba_team_models"
format: html
editor: visual
---

```{r}
library(tidyverse)
```

1. Load in the `wnba_data` data set.  

```{r}
wnba_data <- read_csv("data/wnba_data.csv")
```

2. What do you notice about the team IDs in this data set? Do they all belong to a valid team or are some not needed? (Hint: Might need to use the `distinct()` function). 

```{r}
wnba_data %>% select(team_id, team_display_name) %>% distinct() %>% arrange(team_id)
```
- The IDs above 20 are not necessary because they don't represent teams playing in the regular season. 

3. Filter out the IDs we won’t be using. 

```{r}
# filter for actual teams
wnba <- wnba_data %>% filter(team_id <= 20)
```

4. Now, let's make sure each team ID is associated with the correct team name. Use a `select()` statement with both 	`team_id` and `team_name` and then use the `distinct()` function. Which team IDs are repeated? What might this mean?

```{r}
wnba %>% select(team_id, team_display_name) %>% distinct() %>% arrange(team_id)
```
- This means that the three names with ID 3 and the three names with ID 17 are the same teams who switched their name between seasons. 

5. For the IDs you found, rename the teams so that the same IDs all have the most recent team name. You can create a new variable called `team_name`. 

```{r}
# detroit shock, tulsa shock and dallas wings are the same team
# san antonia silver stars, san antonio stars, and las vegas aces are the same team
# make new team name variable for all these teams
wnba <- wnba %>% mutate(team_name = case_when(team_id == 3 ~ 'Dallas Wings',
                                           team_id == 17 ~ 'Las Vegas Aces',
                                           TRUE ~ team_display_name)) 
```

6. Now that our team names are correct, we can look at games played. Create a new data set called `reg_season` that only has data for regular season games (season_type == 2) and one called `playoffs` that only has data for playoff games (season_type == 3). 

```{r}
# filter for regular season games
reg_season <- wnba %>% filter(season_type == 2)
playoffs <- wnba %>% filter(season_type == 3)
```

7. To calculate win percentage at the mid-way point, we need to know how many games are played in a season. Use the `tally()` function to count the number of games played by each team within each season. What do you notice? 

```{r}
reg_season %>% group_by(season, team_id) %>% tally()
```

- The number of games played is in consistent.

8. Do some Google searching on how many games were played by WNBA teams during these seasons. You might find that the number of regular season games has fluctuated since 2020, but there is still a problem. Can you tell what it is? 

- Not every team has the same number of games recorded for each season. 

9. Let’s look into the 2008 season. There are 4 teams that played 33 games instead of 34. Find out who these teams are and Google their season statistics. Did they actually only play 33 games? Why is this a problem? 

```{r}
reg_season %>% filter(season == 2008) %>% group_by(team_id) %>% tally()
```

```{r}
reg_season %>% 
  select(team_id, team_name) %>% 
  filter(team_id == 3 | team_id == 4 | team_id == 20) %>% 
  distinct()
```
- No. They all played 34 games. The data set is missing data from when the Dallas Wings and Atlanta Dream played the Houston Comets. It did not get recorded as a playoff game. 

10. What are some ways we could solve this problem if we still wanted to run the regression model originally indicated?

- We could look up the games and fill in the missing data by adding rows to the dataset. 
- We could remove the seasons with missing data from the data set. 

