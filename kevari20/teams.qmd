---
title: "wnba_team_data"
format: html
editor: visual
---

```{r}
library(wehoop)
library(tidyverse)
library(tictoc)
```

```{r}
team_data <- load_wnba_team_box(
  seasons = 2003:2022)
```

```{r}
wnba_data <- read_csv("data/wnba_data.csv")
```

```{r}
head(wnba_data)
```

```{r}
wnba_data %>% select(team_id, team_display_name) %>% distinct()
```

```{r}
# filter for actual teams
team_data <- team_data %>% filter(team_id <= 20)
```

```{r}
# views teams
team_data %>% filter(season == 2008) %>% select(team_id, team_display_name) %>% distinct() %>% arrange(team_id)
```

```{r}
# detroit shock, tulsa shock and dallas wings are the same team
# san antonia silver stars, san antonio stars, and las vegas aces are the same team
# make new team name variable for all these teams
team_data <- team_data %>% mutate(team_name = case_when(team_id == 3 ~ 'Dallas Wings',
                                           team_id == 17 ~ 'Las Vegas Aces',
                                           TRUE ~ team_display_name)) 
team_data %>% select(team_id, team_name) %>% distinct()
```

```{r}
reg_season <- team_data %>% filter(season_type == 2) 
```

```{r}
tallys <- reg_season %>% 
  group_by(team_id, season) %>%
  tally() 
tallys
```

```{r}
table(tallys$n, tallys$season)
```
I think the best way is to limit data from 2006 to 2019, because 12 teams play mostly 34 games. 
(14 out of 20 seasons)
From 2003 to 2005, the data just seems limited. 2020 and 2021 are affected by Covid, and now teams play 36 games in 2022)

Bad: 2006, 2007, 2008, 2009, 2011, 2012, 2018

Good: 2010, 2013, 2014, 2015, 2016, 2017, 2019

Starting with 2006: 

```{r}
tallys %>% filter(season == '2006', n != 34)
```


Missing a game on 2006-05-26 @ Chicago Sky
```{r}
team_data %>% filter(team_id == 5, season == 2006) %>% arrange(game_date)
```

Missing a game on 2006-05-23 @ Chicago Sky
```{r}
reg_season %>% filter(team_id == 13, season == 2006) %>% arrange(game_date)
```

Chicago Sky is missing those same two games that the other teams are missing
```{r}
team_data %>% filter(team_id == 19, season == 2006) %>% arrange(game_date)
```

2007: for some reason this is right: there were 13 teams in 2007
```{r}
team_data %>% select(team_id, team_name, season) %>% filter(season == 2007) %>% distinct() %>% arrange(team_id)
```
2008: verified, had 14 teams 
why do 4 of them have 33 games only? 

```{r}
tallys %>% filter(season == '2008', n != 34)
```

Missing a game @ Atlanta dream on 2008-05-23
```{r}
reg_season %>% filter(season == 2008, team_id == 3) %>% arrange(game_date)
```
Missing the game against the previous team (detroit shock) on 2008-05-23. 
```{r}
team_data %>% filter(season == 2008, team_id == 20) %>% arrange(game_date)
```

Missing the last game of the season vs Sacramento Monarchs on 2008-09-15
```{r}
team_data %>% filter(season == 2008, team_id == 4) %>% arrange(game_date)
```
Missing the game against the previous team @ Houston Comets 2008-09-15
```{r}
team_data %>% filter(season == 2008, team_id == 13) %>% arrange(game_date)
```

So from what I can tell, there are just random games that weren't scraped properly from the website. They are always games played against each other, so their might be something wrong with those particular games but I can't tell what exactly it is because they are at random points in the season and don't look formatted differently than the rest. 


```{r}
# make playoff variable thats true if season type is ever 3 for the team
playoff_data <- team_data %>% 
  filter(season_type == 3) %>%
  mutate(playoff = ifelse(season_type == 3, TRUE, FALSE)) %>%
  select(season, team_id, playoff) %>% distinct()
playoff_data
```

```{r}
# total wins
team_wins <- team_data %>% 
  group_by(team_id, season) %>% 
  summarise(total_wins = (sum(team_winner == TRUE, na.rm = TRUE)), 
         total_losses = (sum(team_winner == FALSE, na.rm = TRUE)), 
         total_games = sum(team_winner | team_winner == FALSE, na.rm = TRUE)) %>% 
  filter(total_games > 1) %>%
  arrange(team_id) 
team_wins
```

```{r}
# filter for mid season mark (July 15)
half_wins <- team_data %>%  
  filter((month(game_date) == 5 & day(game_date) >= 19) | 
           (month(game_date) == 6) |
           (month(game_date) == 7 & day(game_date) < 15)) %>% 
  group_by(team_id, season) %>% 
  summarize(half_wins = (sum(team_winner == TRUE, na.rm = TRUE)), 
            half_losses = (sum(team_winner == FALSE, na.rm = TRUE)),
            half_games = sum(team_winner | team_winner == FALSE, na.rm = TRUE), 
            ) %>% 
    filter(half_games > 1) %>%
  arrange(team_id) 
half_wins
```

```{r}
# Join datasets to create win data
wnba_win_data <- full_join(team_wins, half_wins, by = c("team_id", "season")) %>% 
 full_join(playoff_data, by = c("team_id", "season")) %>% arrange(season)
wnba_win_data
```

```{r}
# where playoff value is NA, change this value to FALSE
wnba_win_data <- wnba_win_data %>% 
  mutate(playoff = ifelse(is.na(playoff), FALSE, playoff)) %>% 
  distinct()
wnba_win_data
```

```{r}
# get win percentages
wnba_win_data <- wnba_win_data %>% 
  mutate(total_win_percent = round(total_wins*100 / total_games, 2), 
                half_win_percent = round(half_wins*100 / half_games, 2))
wnba_win_data
```

```{r}
# Create ranking variable
# need to negate because by default it will give higher rank to lower percents
wnba_win_data <- wnba_win_data %>% 
  group_by(season) %>% 
  mutate(final_rank = as.integer(rank(-total_win_percent)), 
         half_rank = as.integer(rank(-half_win_percent)))
wnba_win_data
```

```{r}
# Create a running record variable for each team each season at each game
sum_data <- team_data %>% 
  group_by(team_id, season) %>% 
  arrange(game_date) %>%
  mutate(current_wins = cumsum(ifelse(team_winner == TRUE, 1, 0)), 
         current_losses = cumsum(ifelse(team_winner == FALSE, 1, 0)), 
         current_games = current_wins + current_losses) %>%
  select(team_id, season, game_date, current_wins, current_losses, current_games, team_winner) %>%
  arrange(team_id, game_date)
sum_data
```

```{r}
# running win percentage based on wins and losses
sum_data <- sum_data %>% 
  mutate(current_win_percent = round(current_wins*100 / current_games, 2))
sum_data
```

```{r}
sum_data <- sum_data %>% 
  mutate(week = week(game_date)) 
sum_data
```

```{r}
# count how many teams there are in the dataset
wnba_win_data %>% ungroup() %>% select(team_id) %>% distinct()
```

```{r}
# use the current win percentage to rank the teams after each week of the season
# TODO still have to fix rankings
# because teams play multiple games in one week??? 


sum_data %>% 
  #distinct(season,week,team_id) %>% 
  group_by(season, week) %>% 
  mutate(current_rank = as.integer(rank(-current_win_percent))) %>%
  arrange(season, team_id, game_date)
```

```{r}
# join data
wnba_team_data <- full_join(wnba_win_data, sum_data, by = c("team_id", "season")) %>%
  select(-c(win_percent, half_percent)) %>%
  arrange(season, team_id, game_date)
wnba_team_data
```

```{r}
wnba_team_data <- wnba_team_data %>% select(-c(week, current_rank))
wnba_team_data
```

```{r}
# Write csv file
write.csv(wnba_team_data, "wnba_team_data.csv", row.names=FALSE)
```

```{r}
# for citations
library(report)
cite_packages()
```
