---
title: "Disc Golf Exploration"
author: "Gavin Cassidy"
format: html
---

## Finding/Scraping Data

links to disc golf statistics pages

2024 MPO Stats: https://statmando.com/stats/season-stats-main-dgpt-2024-mpo
2024 FPO Stats: https://statmando.com/stats/season-stats-main-dgpt-2024-fpo

2024 MPO Earnings and Placement: https://statmando.com/stats/stats-elite-series-majors-2024-mpo
2024 FPO Earnings and Placement:
https://statmando.com/stats/stats-elite-series-majors-2024-fpo

statistics for 2024 are through the Portland Open DGPT Event and scraped 6/4/24

Statistics from 2016 to 2023 located on UDisc live

UDisc Live Links: https://www.udisclive.com/stats
different table format for these


```{r}
library(tidyverse)
library(rvest)
```



```{r}
url_fpo_2024 <- "https://statmando.com/stats/season-stats-main-dgpt-2024-fpo"
table_fpo_2024 <- read_html(url_fpo_2024) |> html_nodes("table")
fpo_stats_2024 <- table_fpo_2024[[1]] |> html_table()
fpo_stats_2024
```


```{r}
url_fpo24_earnings <- "https://statmando.com/stats/stats-elite-series-majors-2024-fpo"
table_fpo24_earnings <- read_html(url_fpo24_earnings) |> html_nodes("table")
fpo_stats24 <- table_fpo24_earnings[[1]] |> html_table()
fpo_stats24
```



```{r}
url_mpo_2024 <- "https://statmando.com/stats/season-stats-main-dgpt-2024-mpo"
table_mpo_2024 <- read_html(url_mpo_2024) |> html_nodes("table")
mpo_stats_2024 <- table_mpo_2024[[1]] |> html_table()
mpo_stats_2024
```

```{r}
url_mpo24_earnings <- "https://statmando.com/stats/stats-elite-series-majors-2024-mpo"
table_mpo24_earnings <- read_html(url_mpo24_earnings) |> html_nodes("table")
mpo_stats24 <- table_mpo24_earnings[[1]] |> html_table()
mpo_stats24
```



```{r}
##url_mpo_2016 <- "https://www.udisclive.com/stats?t=stats&y=2016&z=season"
##table_mpo_2016 <- read_html(url_mpo_2016) |> html_nodes("table")
##mpo_stats_2016 <- table_mpo_2016[[1]] |> html_table()
```



```{r}
fpo_stats_2024_clean <- fpo_stats_2024 |> rename(player = X1, 
                                                 "birdie Avg" = X2,
                                                 "bogey Avg" = X3, 
                                                 PKD = X4,
                                                 C1R = X5,
                                                 C2R = X6,
                                                 FWY = X7,
                                                 SCR = X8, 
                                                 "OB/18" = X9,
                                                 C1X = X10, 
                                                 C2P = X11,
                                                 "tot. SG:TG" = X12, 
                                                 "tot. SG:P" = X13, 
                                                 "throws/SG:TG" = X14, 
                                                 "putts/SG:P" = X15, 
                                                 events = X16, 
                                                 rounds = X17) |>
  slice(-1, -2) |>
  mutate(`birdie Avg` = as.double(`birdie Avg`),
         `bogey Avg` = as.double(`bogey Avg`),
         PKD = as.double(PKD), 
         C1R = as.double(C1R), 
         C2R = as.double(C2R),
         FWY = as.double(FWY),
         SCR = as.double(SCR),
         `OB/18` = as.double(`OB/18`),
         C1X = as.double(C1X),
         C2P = as.double(C2P), 
         `tot. SG:TG` = as.double(`tot. SG:TG`), 
         `tot. SG:P` = as.double(`tot. SG:P`),
         `throws/SG:TG` = as.double(`throws/SG:TG`), 
         `putts/SG:P` = as.double(`putts/SG:P`),
         events = as.integer(events),
         rounds = as.integer(rounds))
fpo_stats_2024_clean
```


```{r}
fpo24_clean <- fpo_stats24 |> rename(player = X1, 
                                     starts = X2,
                                     wins = X3, 
                                     podiums = X4, 
                                     "top 10s" = X5, 
                                     "top 20s" = X6,
                                     "avg Place" = X7, 
                                     "DNFs" = X8, 
                                     "win %" = X9,
                                     "podium %" = X10,
                                     "top 10 %" = X11,
                                     "top 20 %" = X12, 
                                     "total Earnings" = X13,
                                     "avg Earnings" = X14, 
                                     "earnings as Winner" = X15,
                                     "total Strokes" = X16) |>
  slice(-1,-2) |>
  mutate(starts = as.integer(starts), 
         wins = as.integer(wins), 
         podiums = as.integer(podiums), 
         `top 10s` = as.integer(`top 10s`),
         `top 20s` = as.integer(`top 20s`), 
         `avg Place` = as.double(`avg Place`),
         DNFs = as.integer(DNFs), 
         `win %` = as.double(`win %`),
         `podium %` = as.double(`podium %`), 
         `top 10 %` = as.double(`top 10 %`),
         `top 20 %` = as.double(`top 20 %`), 
         `total Earnings` = parse_number(`total Earnings`),
         `avg Earnings` = parse_number(`avg Earnings`),
         `earnings as Winner` = parse_number(`earnings as Winner`),
         `total Strokes` = parse_number(`total Strokes`))

fpo24_clean
```



```{r}
mpo_stats_2024_clean <- mpo_stats_2024 |> rename(player = X1, 
                                                 "birdie_avg" = X2,
                                                 "bogey_avg" = X3, 
                                                 PKD = X4,
                                                 C1R = X5, 
                                                 C2R = X6, 
                                                 FWY = X7,
                                                 SCR = X8, 
                                                 "OB/18" = X9,
                                                 C1X = X10,
                                                 C2P = X11,
                                                 "tot_SG:TG" = X12, 
                                                 "tot_SG:P" = X13, 
                                                 "throws/SG:TG" = X14, 
                                                 "putts/SG:P" = X15, 
                                                 events = X16, 
                                                 rounds = X17) |>
  slice(-1, -2) |>
  mutate(birdie_avg = as.double(`birdie_avg`),
         bogey_avg = as.double(`bogey_avg`),
         PKD = as.double(PKD), 
         C1R = as.double(C1R), 
         C2R = as.double(C2R),
         FWY = as.double(FWY),
         SCR = as.double(SCR),
         `OB/18` = as.double(`OB/18`),
         C1X = as.double(C1X),
         C2P = as.double(C2P), 
         `tot_SG:TG` = as.double(`tot_SG:TG`), 
         `tot_SG:P` = as.double(`tot_SG:P`),
         `throws/SG:TG` = as.double(`throws/SG:TG`), 
         `putts/SG:P` = as.double(`putts/SG:P`),
         events = as.integer(events),
         rounds = as.integer(rounds))
mpo_stats_2024_clean
```


```{r}
mpo24_clean <- mpo_stats24 |> rename(player = X1, 
                                     starts = X2,
                                     wins = X3, 
                                     podiums = X4, 
                                     "top_10s" = X5, 
                                     "top_20s" = X6,
                                     "avg_place" = X7, 
                                     "DNFs" = X8, 
                                     "win%" = X9,
                                     "podium%" = X10,
                                     "top_10%" = X11,
                                     "top_20%" = X12, 
                                     "total_earnings" = X13,
                                     "avg_earnings" = X14, 
                                     "earnings_as_winner" = X15,
                                     "total_strokes" = X16) |>
  slice(-1,-2) |>
  mutate(starts = as.integer(starts), 
         wins = as.integer(wins), 
         podiums = as.integer(podiums), 
         top_10s = as.integer(`top_10s`),
         top_20s = as.integer(`top_20s`), 
         avg_place = as.double(`avg_place`),
         DNFs = as.integer(DNFs), 
         `win%` = as.double(`win%`),
         `podium%` = as.double(`podium%`), 
         `top_10%` = as.double(`top_10%`),
         `top_20%` = as.double(`top_20%`), 
         total_earnings = parse_number(`total_earnings`),
         avg_earnings = parse_number(`avg_earnings`),
         earnings_as_winner = parse_number(`earnings_as_winner`),
         total_strokes = parse_number(`total_strokes`))

mpo24_clean
```

```{r}
full_mpo24 <- inner_join(mpo_stats_2024_clean, mpo24_clean, by = "player")
full_mpo24
```

```{r}
full_mpo24 <- full_mpo24 |> select(-starts, -`throws/SG:TG`, -`putts/SG:P`, -DNFs, -`win%`, -`podium%`, -earnings_as_winner)
```

```{r}
full_fpo24 <- inner_join(fpo_stats_2024_clean, fpo24_clean, by = "player")
full_fpo24
```

```{r}
full_fpo24 <- full_fpo24 |> select(-18)
```




## Data Exploration

```{r}
ggplot(data = full_mpo24, aes(x = avg_place, y = total_earnings)) +
  geom_point(aes(color = events)) +
  theme_minimal()
  
```

```{r}
ggplot(data = full_mpo24, aes(x = total_earnings, y = total_strokes)) +
  geom_point() +
  geom_text(aes(label = player))
```

```{r}
dollar_per_shot <- full_mpo24 |> group_by(player) |> 
  summarise(`$/Shot` = total_earnings/total_strokes) |>
  arrange(desc(`$/Shot`)) |>
  slice(1:20) |>
  mutate(player = fct_reorder(player, desc(`$/Shot`)))
dollar_per_shot
```

```{r}
ggplot(data = dollar_per_shot, aes(y = player, x = `$/Shot`)) +
  geom_col()
```

```{r}
ggplot(data = full_mpo24, aes(x = `tot_SG:TG`, y = total_earnings)) +
  geom_point()
```

```{r}
ggplot(data = full_mpo24, aes(x = `tot_SG:P`, y = total_earnings)) +
  geom_point()
```

```{r}
ggplot(data = full_mpo24, aes(x = FWY, y = total_earnings)) +
  geom_point()
```

```{r}
ggplot(data = full_mpo24, aes(x = C2P, y = total_earnings)) +
  geom_point()
```

```{r}
ggplot(data = full_mpo24, aes(x = total_earnings)) +
  geom_histogram(bins = 40, fill = "darkblue") +
  theme_minimal()
```


```{r}
ggplot(data = full_mpo24, aes(x = birdie_avg, y = total_earnings)) +
  geom_point()
```

```{r}
dgpt <- read.csv("/Users/Gavin Cassidy/Desktop/GitHub/stat_289_score/gacass21/Disc Golf/data repo/DGPT.csv")

dgpt2 <-  dgpt |> select(-1, -2, -4, -9, -10, -15, -16, -17, -18, -20, -22, -23, -25) |>
  select(2, 3, 4, 5, 8, 6, 7, 9, 1, 10, 11, 12)

dgpt_cor_table <- cor(dgpt2)
dgpt_cor_table

```

```{r}
dgpt_reg <- lm(total_earnings ~ PKD + birdie_avg + C2R + C2P, data = dgpt)
summary(dgpt_reg)
```


```{r}
ggplot(data = dgpt, aes(x = , y = total_earnings)) +
  geom_point()
```


```{r}
dgpt_tech <- dgpt |> select(-1,-2)
cor(dgpt_tech)
```

```{r}
ggplot(data = dgpt, aes(x = tot_SG.TG, y = total_earnings)) +
  geom_point()
```
```{r}
ggplot(data = dgpt, aes(x = C1R, y = birdie_avg)) +
  geom_point()
```
```{r}
ggplot(data = dgpt, aes(x = C2R, y = top_10s)) +
  geom_point()
```
```{r}
ggplot(data = dgpt, aes(x = FWY, y = total_earnings)) +
  geom_point()
```

```{r}
ggplot(data = dgpt, aes(x = tot_SG.P, y = total_earnings)) +
  geom_point()
```



