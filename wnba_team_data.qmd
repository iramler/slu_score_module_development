---
title: "wnba_team_data"
format: html
editor: visual
---

```{r}
library(wehoop)
library(tidyverse)
library(tictoc)
```

```{r}
team_data <- load_wnba_team_box(
  seasons = 2003:2022)
```

```{r}
head(team_data)
```
```{r}
# filter for actual teams
team_data <- team_data %>% filter(team_id <= 20)
```

```{r}
# views teams
team_data %>% select(team_id, team_display_name) %>% distinct() %>% arrange(team_id)
```
```{r}
# detroit shock, tulsa shock and dallas wings are the same team
# san antonia silver stars, san antonio stars, and las vegas aces are the same team
# make new team name variable for all these teams
team_data <- team_data %>% mutate(team_name = case_when(team_id == 3 ~ 'Dallas Wings',
                                           team_id == 17 ~ 'Las Vegas Aces',
                                           TRUE ~ team_display_name)) 
team_data
```

```{r}
# make playoff variable thats true if season type is ever 3 for the team
playoff_data <- team_data %>% 
  filter(season_type == 3) %>%
  mutate(playoff = ifelse(season_type == 3, TRUE, FALSE)) %>%
  select(season, team_id, playoff) %>% distinct()
playoff_data
```

```{r}
# total wins
team_wins <- team_data %>% 
  group_by(team_id, season) %>% 
  summarise(total_wins = (sum(team_winner == TRUE, na.rm = TRUE)), 
         total_losses = (sum(team_winner == FALSE, na.rm = TRUE)), 
         total_games = sum(team_winner | team_winner == FALSE, na.rm = TRUE)) %>% 
  filter(total_games > 1) %>%
  arrange(team_id) 
team_wins
```

```{r}
# filter for mid season mark (July 15)
half_wins <- team_data %>%  
  filter((month(game_date) == 5 & day(game_date) >= 19) | 
           (month(game_date) == 6) |
           (month(game_date) == 7 & day(game_date) < 15)) %>% 
  group_by(team_id, season) %>% 
  summarize(half_wins = (sum(team_winner == TRUE, na.rm = TRUE)), 
            half_losses = (sum(team_winner == FALSE, na.rm = TRUE)),
            half_games = sum(team_winner | team_winner == FALSE, na.rm = TRUE), 
            ) %>% 
    filter(half_games > 1) %>%
  arrange(team_id) 
half_wins
```

```{r}
# Join datasets to create win data
wnba_win_data <- full_join(team_wins, half_wins, by = c("team_id", "season")) %>% 
 full_join(playoff_data, by = c("team_id", "season")) %>% arrange(season)
wnba_win_data
```

```{r}
# where playoff value is NA, change this value to FALSE
wnba_win_data <- wnba_win_data %>% 
  mutate(playoff = ifelse(is.na(playoff), FALSE, playoff)) %>% 
  distinct()
wnba_win_data
```

```{r}
# get win percentages
wnba_win_data <- wnba_win_data %>% 
  mutate(total_win_percent = round(total_wins*100 / total_games, 2), 
                half_win_percent = round(half_wins*100 / half_games, 2))
wnba_win_data
```

```{r}
# Create ranking variable
# need to negate because by default it will give higher rank to lower percents
wnba_win_data <- wnba_win_data %>% 
  group_by(season) %>% 
  mutate(final_rank = as.integer(rank(-total_win_percent)), 
         half_rank = as.integer(rank(-half_win_percent)))
wnba_win_data
```

```{r}
# Create a running record variable for each team each season at each game
sum_data <- team_data %>% 
  group_by(team_id, season) %>% 
  arrange(game_date) %>%
  mutate(current_wins = cumsum(ifelse(team_winner == TRUE, 1, 0)), 
         current_losses = cumsum(ifelse(team_winner == FALSE, 1, 0)), 
         current_games = current_wins + current_losses) %>%
  select(team_id, season, game_date, current_wins, current_losses, current_games, team_winner) %>%
  arrange(team_id, game_date)
sum_data
```

```{r}
# running win percentage based on wins and losses
sum_data <- sum_data %>% 
  mutate(current_win_percent = round(current_wins*100 / current_games, 2))
sum_data
```

```{r}
sum_data <- sum_data %>% 
  mutate(week = week(game_date)) 
sum_data
```

```{r}
# count how many teams there are in the dataset
wnba_win_data %>% ungroup() %>% select(team_id) %>% distinct()
```

```{r}
# use the current win percentage to rank the teams after each week of the season
sum_data <- sum_data %>% 
  group_by(season, week) %>%
  mutate(current_rank = as.integer(rank(-current_win_percent))) %>%
  arrange(season, team_id, game_date)
sum_data
```

```{r}
# join data
wnba_team_data <- full_join(wnba_win_data, sum_data, by = c("team_id", "season")) %>%
  select(-c(win_percent, half_percent)) %>%
  arrange(season, team_id, game_date)
wnba_team_data
```

# TODO still have to fix rankings

```{r}
# Write csv file
#write.csv(wnba_team_data, "wnba_team_data.csv", row.names=FALSE)
```

```{r}
# for citations
library(report)

cite_packages()
```


